with "opengl_shared";
with "opengl";

library project OpenGL.Glfw is
   for Languages use ("ada");

   for Library_Name use "GlfwAda";
   for Library_Kind use OpenGL_Shared'Library_Kind;


   type GLFW_Version_Type is ("2", "3");
   GLFW_Version : GLFW_Version_Type := external ("GLFW_Version");

   GLFW_Sources := ("src/glfw");

   -- Most tests need a GLFW window. An abstraction layer is provided
   -- so that the test work with GLFW 2 and 3. Test project can reference
   -- this variable in order to include the appropriate sources for
   -- the defined GLFW version.
   Shared_Test_Sources := ("tests/shared");

   GLFW_Lib := "";
   case GLFW_Version is
      when "2" =>
         GLFW_Sources := GLFW_Sources & "src/glfw/v2";
         Shared_Test_Sources := Shared_Test_Sources & "tests/shared/glfw2_backend";
         GLFW_Lib := "-lglfw";
      when "3" =>
         GLFW_Sources := GLFW_Sources & "src/glfw/v3";
         Shared_Test_Sources := Shared_Test_Sources & "tests/shared/glfw3_backend";
         case OpenGL_Shared.Windowing_System is
            when "windows" => GLFW_Lib := "-lglfw3";
            when "x11" | "quartz" => GLFW_Lib := "-lglfw";
         end case;
   end case;

   for Source_Dirs use GLFW_Sources;
   for Object_Dir use "obj";
   for Library_Dir use "lib";

   package Ide renames OpenGL_Shared.Ide;
   package Builder renames OpenGL_Shared.Builder;
   package Compiler renames OpenGL_Shared.Compiler;

   package Linker is
      case OpenGL_Shared.Windowing_System is
         when "quartz" =>
            for Linker_Options use (GLFW_Lib, "-Wl,-framework,Cocoa,-framework,IOKit,-L/usr/local/lib");
         when "windows" =>
            for Linker_Options use (GLFW_Lib, "-lwinmm", "-lgdi32");
         when "x11" =>
		      -- -lX11 is already set in opengl.gpr
            for Linker_Options use (GLFW_Lib, "-pthread", "-lm", "-lXcursor", "-lXxf86vm",
                                    "-lXrandr", "-lXinerama", "-lXi", "-ldl");
      end case;
   end Linker;
end OpenGL.Glfw;
